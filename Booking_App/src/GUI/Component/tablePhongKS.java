package GUI.Component;

import DAO.DonDat_DAO;
import DAO.PhongKS_DAO;
import MODEL.DonDat;
import MODEL.NGUOIDUNG;
import MODEL.Phong_KS;
import GUI.JFRAME.TaoPhong;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import utils.*;

/**
 *
 * @author Admin
 */
public class tablePhongKS extends javax.swing.JPanel {

    /**
     * Creates new form tablePhongKS
     */
    
    private String userName = "khachsan";
    private String pass = "123";
    private NGUOIDUNG user;
    private int selectedRow = -1;
    private Integer selectecDonID = -1;
    
    private handleIcon handleIcon = new handleIcon();
    

    
    private final String header[] = {"Mã Phòng", "Loại Phòng", "Giá", "Tổng số lượng"}; 
    private DefaultTableModel model;
    
    private PhongKS_DAO phongKSDao = new PhongKS_DAO();
    
    public tablePhongKS() {
        initComponents();
    }
    
    public tablePhongKS(NGUOIDUNG user) {
        this.user = user;
        initComponents();
        setIcon();
        txtTitle.setText("Hello " + user.getHOTEN());
        loadTable();
    }
    
    
    public void setIcon(){
        handleIcon.setIcon(btnXoa, "/image/delete.png");
        handleIcon.setIcon(btnCreatePhong, "/image/add.png");
        handleIcon.setIcon(btnReset, "/image/refresh.png");
        handleIcon.setIcon(btnSearch, "/image/search.png");
    }
    
    public void loadTable(){
        scrollBar.getVerticalScrollBar().setUI(new CustomScrollBar());
        scrollBar.getHorizontalScrollBar().setUI(new CustomScrollBar());
        
        this.model = new DefaultTableModel(header, 0){
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                switch (columnIndex) {
                    case 0: return Integer.class;   
                    case 1: return String.class;    
                    case 2: return Long.class;    
                    case 3: return Long.class;   
                    default: return Object.class;
                }
            }
            @Override
            public boolean isCellEditable(int row, int column) {
                // Trả về false để không cho phép edit bất kỳ ô nào
                return false;
            }
        };
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        
        
        Vector<Phong_KS> phongKSList = phongKSDao.showListPhong(this.user.getID());
        for (Phong_KS p : phongKSList){
            Vector<Object> row = new Vector<>(Arrays.asList(
                    p.getId(),
                    p.getLoaiPhong(),
                    p.getGia(),
                    p.getTongSoluong()
            ));
            model.addRow(row);
        }
        myTable.setRowSorter(null);     // Xóa RowSorter đang giữ trạng thái cũ
        myTable.setModel(model);        // Gán lại model mới
        myTable.revalidate();           // Cập nhật lại
        myTable.repaint();
        
        for (int i = 0; i < myTable.getColumnCount(); i++) {
            myTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollBar = new javax.swing.JScrollPane();
        myTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnCreatePhong = new javax.swing.JButton();
        txtFieldSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        CBSort = new javax.swing.JComboBox<>();
        btnXoa = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        txtTitle = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1320, 1025));

        myTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã phòng", "Loại Phòng", "Giá", "Tổng số lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        myTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myTableMouseClicked(evt);
            }
        });
        scrollBar.setViewportView(myTable);

        btnCreatePhong.setText("Tạo phòng");
        btnCreatePhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePhongActionPerformed(evt);
            }
        });

        txtFieldSearch.setText("...");
        txtFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldSearchActionPerformed(evt);
            }
        });

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        CBSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo mã phòng", "Theo giá giảm", "Theo số lượng giảm" }));
        CBSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBSortActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnCreatePhong)
                .addGap(18, 18, 18)
                .addComponent(btnXoa)
                .addGap(18, 18, 18)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 629, Short.MAX_VALUE)
                .addComponent(txtFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch)
                .addGap(18, 18, 18)
                .addComponent(CBSort, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreatePhong)
                    .addComponent(txtFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(CBSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa)
                    .addComponent(btnReset))
                .addContainerGap())
        );

        txtTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtTitle.setForeground(new java.awt.Color(0, 0, 0));
        txtTitle.setText("Hello Hotel");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrollBar)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrollBar, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void myTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myTableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && SwingUtilities.isLeftMouseButton(evt)) {
            int viewRow = myTable.getSelectedRow();
            if (viewRow != -1) {
                // Chuyển sang model index
                int modelRow = myTable.convertRowIndexToModel(viewRow);

                DefaultTableModel model = (DefaultTableModel) myTable.getModel();
                
                Integer maPhong = Integer.valueOf(model.getValueAt(modelRow, 0).toString());
                
                Phong_KS phong = phongKSDao.selectByID(maPhong);
                
                TaoPhong taoPhongFrame = new TaoPhong(this.user, phong);
                taoPhongFrame.pack();                        
                taoPhongFrame.setLocationRelativeTo(null);
                taoPhongFrame.setVisible(true);
            }
        }
    }//GEN-LAST:event_myTableMouseClicked

    private void btnCreatePhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePhongActionPerformed
        // TODO add your handling code here:
        TaoPhong taoPhongFrame = new TaoPhong(this.user);
        taoPhongFrame.pack();                        // hoặc setSize(...)
        taoPhongFrame.setLocationRelativeTo(null);   // canh giữa màn hình
        taoPhongFrame.setVisible(true);
    }//GEN-LAST:event_btnCreatePhongActionPerformed

    private void txtFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void CBSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBSortActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)myTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        myTable.setRowSorter(sorter);

        final int COL_MAPHONG = 0;
        final int COL_GIA = 2;
        final int COL_SOLUONG = 3;

        String selection = (String) CBSort.getSelectedItem();

        ArrayList<RowSorter.SortKey> keys = new ArrayList<>();
        switch (CBSort.getSelectedIndex()) {
            case 0: keys.add(new RowSorter.SortKey(COL_MAPHONG, SortOrder.ASCENDING));  break;
            case 1: keys.add(new RowSorter.SortKey(COL_GIA,     SortOrder.DESCENDING)); break;
            case 2: keys.add(new RowSorter.SortKey(COL_SOLUONG,    SortOrder.DESCENDING)); break;
        }
        sorter.setSortKeys(keys);
    }//GEN-LAST:event_CBSortActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        Integer selectedRow = myTable.getSelectedRow();
        Integer modelRow = myTable.convertRowIndexToModel(selectedRow);
        if (modelRow != -1){
            Integer idP = Integer.valueOf(model.getValueAt(modelRow, 0).toString());
            phongKSDao.delete(idP);
            model.removeRow(modelRow);
        }
        else{
            message.alert(null, "Cần chọn phòng muốn xóa");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        this.loadTable();
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBSort;
    private javax.swing.JButton btnCreatePhong;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnXoa;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTable myTable;
    private javax.swing.JScrollPane scrollBar;
    private javax.swing.JTextField txtFieldSearch;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables
}
