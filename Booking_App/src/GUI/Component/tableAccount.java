package GUI.Component;

import DAO.DonDat_DAO;
import MODEL.NGUOIDUNG;
import MODEL.Phong_KS;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import DAO.NguoiDung_Dao;
import database.jdbcHelper;
import utils.message;

/**
 *
 * @author Admin
 */
public class tableAccount extends javax.swing.JPanel {

    /**
     * Creates new form tableAccount
     */
    private final String header[] = {"ID", "Họ tên", "Email", "Mật khẩu", "Loại TK"}; 
    private DefaultTableModel model;
    
    private int selectedRow = -1;
    private Vector<NGUOIDUNG> listUser;
    
    public tableAccount() {
        new jdbcHelper("booking_app", "12345678");
        initComponents();
        this.listUser = NguoiDung_Dao.selectAll();
        loadTable();
    }
    
    public void loadData(Vector<NGUOIDUNG> listUser){
        DefaultTableModel model = (DefaultTableModel) myTable.getModel();
        model.setRowCount(0);
        for (NGUOIDUNG p : listUser){
            Vector<Object> row = new Vector<>(Arrays.asList(
                    p.getID(),
                    p.getHOTEN(),
                    p.getMATKHAU(),
                    p.getEMAIL(),
                    p.getLOAITK()
            ));
            model.addRow(row);
        }
    }
    
    public void configModel(){
        scrollBar.getVerticalScrollBar().setUI(new CustomScrollBar());
        scrollBar.getHorizontalScrollBar().setUI(new CustomScrollBar());
        
        this.model = new DefaultTableModel(header, 0){
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                switch (columnIndex) {
                    case 0: return Integer.class;   
                    case 1: return String.class;    
                    case 2: return String.class;    
                    case 3: return String.class;   
                    default: return String.class;
                }
            }
            @Override
            public boolean isCellEditable(int row, int column) {
                // Trả về false để không cho phép edit bất kỳ ô nào
                return false;
            }
        };
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        myTable.setRowSorter(null);     // Xóa RowSorter đang giữ trạng thái cũ
        myTable.setModel(model);        // Gán lại model mới
        myTable.revalidate();           // Cập nhật lại
        myTable.repaint();
        
        for (int i = 0; i < myTable.getColumnCount(); i++) {
            myTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }
    
    public void loadTable(){
        this.configModel();
        this.loadData(this.listUser);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollBar = new javax.swing.JScrollPane();
        myTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        CBSort = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();

        myTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Email", "Mật khẩu", "Họ tên", "Loại TK"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        myTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myTableMouseClicked(evt);
            }
        });
        scrollBar.setViewportView(myTable);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        CBSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Họ Tên" }));
        CBSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBSortActionPerformed(evt);
            }
        });

        txtSearch.setText("...");
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refresh.png"))); // NOI18N
        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 338, Short.MAX_VALUE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch)
                .addGap(12, 12, 12)
                .addComponent(CBSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearch)
                        .addComponent(CBSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh)))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollBar, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrollBar, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CBSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBSortActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)myTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        myTable.setRowSorter(sorter);

        final int COL_ID = 0;
        final int COL_HOTEN = 1;


        String selection = (String) CBSort.getSelectedItem();

        ArrayList<RowSorter.SortKey> keys = new ArrayList<>();
        switch (CBSort.getSelectedIndex()) {
            case 0: keys.add(new RowSorter.SortKey(COL_ID, SortOrder.ASCENDING));  break;
            case 1: keys.add(new RowSorter.SortKey(COL_HOTEN,     SortOrder.ASCENDING)); break;
        }
        sorter.setSortKeys(keys);
    }//GEN-LAST:event_CBSortActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (this.selectedRow != -1){
            Integer rowModel = myTable.convertRowIndexToModel(selectedRow);
            Integer ID = (Integer) myTable.getModel().getValueAt(rowModel, 0);
            NguoiDung_Dao.delete(ID);
            model.removeRow(rowModel);
        } 
        else{
            message.alert(null, "Cần chọn hàng cần xóa");
                    
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void myTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myTableMouseClicked
        // TODO add your handling code here:
        this.selectedRow = myTable.getSelectedRow();
        
    }//GEN-LAST:event_myTableMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String key = txtSearch.getText();
        Vector<NGUOIDUNG> listUserSearched = NguoiDung_Dao.selectByKey(key);
        this.loadData(listUserSearched);   
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        this.loadData(this.listUser);
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBSort;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable myTable;
    private javax.swing.JScrollPane scrollBar;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
