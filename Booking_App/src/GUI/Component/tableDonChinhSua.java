/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.Component;

import java.awt.CardLayout;
import javax.swing.JPanel;
import DAO.DonChinhSua_DAO;
import DAO.DonDat_DAO;
import DAO.KhachSan_DAO;
import GUI.JFRAME.CuaSoPheDuyet;
import MODEL.KHACHSAN;
import MODEL.DonChinhSua;
import MODEL.DonDat;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bobui
 */
public class tableDonChinhSua extends javax.swing.JPanel {

    private JPanel parent;
    private CardLayout cardLayout;
    private KHACHSAN ks;
    
    
    
    public tableDonChinhSua(JPanel parent,CardLayout cardLayout, String email) {
        initComponents();
        KhachSan_DAO dao = new KhachSan_DAO();
        this.ks = dao.select(email);
        
        loadTableData(ks.getID());
        listdonTable.setDefaultEditor(Object.class, null);

        
    }

    public void loadTableData(Integer id) {
        DefaultTableModel model = (DefaultTableModel) listdonTable.getModel();
        model.setRowCount(0);
        DonChinhSua_DAO dao = new DonChinhSua_DAO();
        List<DonChinhSua> list = dao.selectDonChinhSuaByKhachSanId(id);
        for (DonChinhSua d : list) {
            //System.out.println(9999);
            model.addRow(new Object[]{
                d.getId(),
                d.getDatPhongId(),
                d.getNgayNhanMoi(),
                d.getNgayTraMoi(),
                d.getLoaiPhong(),
                d.getSlMoi(),
                d.getTrangThaiDuyet(),
                d.getTrangThaiThanhToan()
            });
        }
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        for (int i = 0; i < listdonTable.getColumnCount(); i++) {
            listdonTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        listdonTable = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1320, 1025));

        listdonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã đơn chỉnh sửa", "Mã đơn đặt", "Ngàn nhận mới", "Ngày trả mới", "Tên phòng", "Số lượng mới", "Trạng thái duyệt", "Trạng thái thanh toán"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listdonTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        listdonTable.setRowHeight(40);
        listdonTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listdonTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listdonTable);
        if (listdonTable.getColumnModel().getColumnCount() > 0) {
            listdonTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            listdonTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            listdonTable.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        jScrollPane1.setViewportView(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1471, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listdonTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listdonTableMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && SwingUtilities.isLeftMouseButton(evt)) {
            int viewRow = listdonTable.getSelectedRow();
            if (viewRow != -1) {
                // Chuyển sang model index
                int modelRow = listdonTable.convertRowIndexToModel(viewRow);

                DefaultTableModel model = (DefaultTableModel) listdonTable.getModel();
                
                Integer madonCS = Integer.valueOf(model.getValueAt(modelRow, 0).toString());
                Integer madondat = Integer.valueOf(model.getValueAt(modelRow, 1).toString());
                
                System.out.println(madonCS);
                System.out.println(madondat);
                
                DonChinhSua dcs = new DonChinhSua_DAO().selectDonChinhSuaByIdCS(madonCS);
                DonDat dd= new DonDat_DAO().selectByIDD(madondat);
                
                CuaSoPheDuyet CSPD = new CuaSoPheDuyet(dcs, dd);
                CSPD.pack();                        
                CSPD.setLocationRelativeTo(null);
                CSPD.setVisible(true);
            }
        }
    }//GEN-LAST:event_listdonTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable listdonTable;
    // End of variables declaration//GEN-END:variables
}
