-- ===============================
-- HỆ THỐNG ĐẶT PHÒNG - CHỈ HỖ TRỢ KHÁCH HÀNG VÀ KHÁCH SẠN
-- ===============================

-- 1. NGƯỜI DÙNG
CREATE TABLE NGUOIDUNG (
    ID NUMBER PRIMARY KEY,
    EMAIL VARCHAR2(100),
    MATKHAU VARCHAR2(100) NOT NULL,
    HOTEN VARCHAR2(100),
    LOAITK VARCHAR2(20) CHECK (LOAITK IN ('KHACHHANG', 'KHACHSAN', 'ADMIN'))
);

ALTER TABLE NGUOIDUNG
ADD CONSTRAINT uq_NGUOIDUNG_email UNIQUE (EMAIL);


-- 2. KHÁCH HÀNG
CREATE TABLE KHACHHANG (
    ID NUMBER PRIMARY KEY REFERENCES NGUOIDUNG(ID) ON DELETE CASCADE,
    CCCD VARCHAR2(20),
    NGAYSINH DATE
);

-- 3. KHÁCH SẠN (TRƯỚC ĐÂY LÀ DOANHNGHIEP)
CREATE TABLE KHACHSAN (
    ID NUMBER PRIMARY KEY REFERENCES NGUOIDUNG(ID) ON DELETE CASCADE,
    TENDN VARCHAR2(100),
    DIACHI VARCHAR2(200),
    TINH VARCHAR2(200),
    MOTA CLOB
);


-- 4. NHÂN VIÊN
CREATE TABLE NHANVIEN (
    ID NUMBER PRIMARY KEY REFERENCES NGUOIDUNG(ID) ON DELETE CASCADE,
    BOPHAN VARCHAR2(50)
);

-- 5. PHÒNG
CREATE TABLE PHONG (
    ID NUMBER PRIMARY KEY,
    KHACHSAN_ID NUMBER REFERENCES KHACHSAN(ID) ON DELETE CASCADE,
    LOAIPHONG VARCHAR2(50),
    GIA NUMBER,
    MOTA CLOB,
    TONGSOLUONG NUMBER,
    NGAY_DANG DATE,
    ANH1 BLOB,
    ANH2 BLOB,
    ANH3 BLOB
);


-- 6. ĐẶT PHÒNG
CREATE TABLE DATPHONG (
    ID NUMBER PRIMARY KEY,
    KHACHHANG_ID NUMBER REFERENCES KHACHHANG(ID) ON DELETE CASCADE,
    PHONG_ID NUMBER REFERENCES PHONG(ID) ON DELETE CASCADE,
    NGAYNHAN DATE,
    NGAY_TRA DATE,
    NGAY_DAT DATE,
    SL NUMBER,
    DIEMDANHGIA NUMBER
);

-- 7. THANH TOÁN
CREATE TABLE THANHTOAN (
    ID NUMBER PRIMARY KEY, -- Tham chiếu tới ID của DATPHONG
    NGAY_GIAODICH DATE DEFAULT SYSDATE,
    SOTIEN NUMBER(10, 2),
    SOTHE VARCHAR2(4 BYTE), -- Lưu 4 số cuối
    TEN_CHUTHE VARCHAR2(50),
    TENTHE VARCHAR2(50),
    FOREIGN KEY (ID) REFERENCES DATPHONG(ID) ON DELETE CASCADE
);

-- 8. HỎI ĐÁP
CREATE TABLE HOIDAP (
    ID NUMBER PRIMARY KEY,
    KHACHHANG_ID NUMBER REFERENCES KHACHHANG(ID) ON DELETE CASCADE,
    NOIDUNG CLOB,
    NGAYGUI DATE DEFAULT SYSDATE,
    NHANVIEN_ID NUMBER REFERENCES NHANVIEN(ID) ON DELETE CASCADE,
    TRALOI CLOB,
    NGAYTRALOI DATE
);

--9. DON CHINH SUA
CREATE TABLE DON_CHINHSUA (
    ID               NUMBER PRIMARY KEY,              -- Mã đơn chỉnh sửa
    DATPHONG_ID      NUMBER NOT NULL,                 -- Tham chiếu tới đơn gốc
    NGAYNHAN_MOI     DATE,
    NGAY_TRA_MOI     DATE,
    SL_MOI           NUMBER,
    TRANGTHAI_DUYET  VARCHAR2(20),                    -- CHODUYET, DADUYET, TUCHOI
    TRANGTHAI_THANHTOAN   VARCHAR(20),                 -- đã tt , 
    CONSTRAINT FK_DATPHONG
        FOREIGN KEY (DATPHONG_ID) REFERENCES DATPHONG(ID) ON DELETE CASCADE
);
ALTER TABLE DON_CHINHSUA
ADD CONSTRAINT CK_TTDONCHINHSUA_DUYET 
CHECK (TRANGTHAI_DUYET IN ('CHỜ DUYỆT', 'ĐÃ DUYỆT', 'KHÔNG DUYỆT'));

ALTER TABLE DON_CHINHSUA
ADD CONSTRAINT CK_THANHTOAN 
CHECK (TRANGTHAI_THANHTOAN IN ('ĐÃ THANH TOÁN', 'CHƯA THANH TOÁN'))



-- ===============================
-- SEQUENCE + TRIGGER
-- ===============================
-- NGUOI DUNG
CREATE SEQUENCE SEQ_NGUOIDUNG_ID START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TRG_AUTO_ID_NGUOIDUNG
BEFORE INSERT ON NGUOIDUNG
FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT SEQ_NGUOIDUNG_ID.NEXTVAL INTO :NEW.ID FROM dual;
  END IF;
END;
/

-- 1. Tạo sequence cho PHONG.ID
CREATE SEQUENCE seq_phong
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

-- 2. Tạo trigger tự động gán ID trước khi insert
CREATE OR REPLACE TRIGGER trg_phong_id
  BEFORE INSERT ON PHONG
  FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    :NEW.ID := seq_phong.NEXTVAL;
  END IF;
END;
/

--Thêm trigger tự dộng tăng id DATPHONG :
 -- 1. Tạo sequence
CREATE SEQUENCE seq_datphong
  START WITH 1
  INCREMENT BY 1
  NOCACHE;  -- hoặc CACHE theo nhu cầu

-- 2. Tạo trigger BEFORE INSERT
CREATE OR REPLACE TRIGGER trg_datphong_bi
  BEFORE INSERT ON datphong
  FOR EACH ROW
BEGIN
  IF :NEW.id IS NULL THEN
    SELECT seq_datphong.NEXTVAL
      INTO :NEW.id
    FROM DUAL;
  END IF;
END;
/


--TRIGGER AI CHO DON CHINH SUA
CREATE SEQUENCE SEQ_DONCHINHSUA START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER trg_auto_id_donchinhsua
BEFORE INSERT ON DON_CHINHSUA
FOR EACH ROW
BEGIN
  SELECT SEQ_DONCHINHSUA.NEXTVAL
  INTO :NEW.ID
  FROM dual;
END;
COMMIT


CREATE OR REPLACE FUNCTION SO_PHONG_TRONG (
    v_phong_id      IN NUMBER,
    v_ngay_nhan     IN DATE,
    v_ngay_tra      IN DATE
) RETURN NUMBER IS
    v_tong_so_luong     NUMBER;
    v_da_dat            NUMBER;
    v_con_trong         NUMBER;
BEGIN
    -- Lấy tổng số lượng phòng từ bảng PHONG
    SELECT TONGSOLUONG INTO v_tong_so_luong
    FROM PHONG
    WHERE ID = v_phong_id;

    -- Tính tổng số lượng phòng đã được đặt trùng khoảng thời gian
    SELECT NVL(SUM(SL), 0) INTO v_da_dat
    FROM DATPHONG
    WHERE PHONG_ID = v_phong_id
      AND (
            (v_ngay_nhan < NGAY_TRA AND v_ngay_tra > NGAYNHAN)
          );

    -- Tính số phòng còn trống
    v_con_trong := v_tong_so_luong - v_da_dat;

    RETURN v_con_trong;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN 0;
    WHEN OTHERS THEN
        RETURN -1; -- lỗi
END;
/
commit

-- ===============================
-- GRAMT QUYỀN
-- ===============================

GRANT INSERT ON booking_app.nguoidung   TO nguoidung_user;
GRANT INSERT ON booking_app.khachhang   TO nguoidung_user;
GRANT INSERT ON booking_app.khachsan TO nguoidung_user;

GRANT INSERT
  ON booking_app.DON_CHINHSUA
  TO nguoidung_user;

GRANT DELETE
  ON booking_app.datphong
  TO nguoidung_user;

GRANT DELETE
  ON booking_app.datphong
  TO nguoidung_user;
  
GRANT DELETE
    ON booking_app.thanhtoan
    TO nguoidung_user;

GRANT SELECT, INSERT
  ON booking_app.datphong
  TO nguoidung_user;
  
GRANT SELECT, INSERT
  ON booking_app.phong
  TO nguoidung_user;
  
GRANT SELECT, INSERT
  ON booking_app.thanhtoan
  TO nguoidung_user;

GRANT CREATE SESSION TO khachsan;
GRANT INSERT, DELETE, UPDATE ON booking_app.phong TO khachsan;
  
grant update on booking_app.phong to

-- ===============================
-- COMMIT
-- ===============================
COMMIT;